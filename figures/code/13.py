import xarray as xr
import matplotlib.pyplot as plt

"""
Script to generate Figure 13.

Comparison of annual average temperature over the region highlighted in Figure 12
(latitudes 41.60–42.20◦N and longitudes 1.60–2.40◦E) from ERA5, CERRA, and ROCIO IBEB
dataset. ROCIO IBEB is a 5 km gridded observational dataset which is used as ground 
truth; it was generated by the Spanish Meteorological Service (AEMET) through optimal 
interpolation of observations from over 1,800 stations (Peral García et al., 2017).
"""

# Load datasets
era5_ds = (
    xr.open_mfdataset(
        "/home/pereza/data/phd/project/super-resolution/data/era5/t2m/None/*.nc"
    )
    .resample(time="1D")
    .mean()
)

cerra_ds = (
    xr.open_mfdataset(
        "/home/pereza/data/phd/project/super-resolution/data/cerra/t2m/None/*.nc"
    )
    .resample(time="1D")
    .mean()
)

aemet_ds = xr.open_mfdataset(
    "/home/pereza/data/phd/project/perfect-prog/data/aemet/tas/None/*.nc"
).rename_vars({"tas": "t2m"})

# Define region: latitudes 41.60–42.20°N and longitudes 1.60–2.40°E
lat_min, lat_max = 41.60, 42.20
lon_min, lon_max = 1.60, 2.40

# Subset and compute annual means
datasets = {"ERA5": era5_ds, "CERRA": cerra_ds, "AEMET": aemet_ds}
colors = ["#1b9e77", "#d95f02", "#7570b3"]

processed = {}
for name, ds in datasets.items():
    region = ds.sel(
        lat=slice(lat_min, lat_max),
        lon=slice(lon_min, lon_max),
        time=slice("1985-01-01", "2020-12-31"),
    )
    region_mean = region.resample(time="YS").mean().mean(dim=["lat", "lon"]).load()
    processed[name] = region_mean

# Find common time steps (years)
common_years = sorted(
    set.intersection(*[set(ds.time.values) for ds in processed.values()])
)
for name in processed:
    processed[name] = processed[name].sel(time=common_years)

# Plotting
fig, ax = plt.subplots(figsize=(10, 6))

for i, (name, ds) in enumerate(processed.items()):
    ds.t2m.plot(
        ax=ax,
        label=name,
        color=colors[i % len(colors)],
        alpha=0.9,
    )

ax.set_xlabel("Year", fontsize=12)
ax.set_ylabel("Temperature (°C)", fontsize=12)
ax.tick_params(axis="both", labelsize=12)
ax.legend(fontsize=12)
ax.grid(True)

plt.tight_layout()
plt.savefig(
    "/tmp/13.png",
    dpi=300,
    bbox_inches="tight",
)
plt.close()
